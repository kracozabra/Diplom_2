{"name": "Проверка получения заказов неавторизованного пользователя", "status": "failed", "statusDetails": {"message": "AssertionError: assert 200 == 401\n +  where 200 = <Response [200]>.status_code\n +  and   401 = data.STATUS_401", "trace": "self = <test_get_orders.TestGetOrders object at 0x0000024F4EA43F50>, register_return_response_delete_user = <Response [200]>\n\n    @allure.title('Проверка получения заказов неавторизованного пользователя')\n    def test_get_order_without_authorization(self, register_return_response_delete_user):\n        response_registration = register_return_response_delete_user\n        refresh_token = response_registration.json()['refreshToken']\n        token = response_registration.json()['accessToken']\n        helpers.create_order(token)\n        headers_json = helpers.generate_headers_with_token(token)\n        helpers.logout_user_by_token(refresh_token)\n    \n        response = requests.get(data.GET_ORDER_BY_USER, headers=headers_json)\n>       assert response.status_code == data.STATUS_401\nE       assert 200 == 401\nE        +  where 200 = <Response [200]>.status_code\nE        +  and   401 = data.STATUS_401\n\ntests\\test_get_orders.py:31: AssertionError"}, "steps": [{"name": "Создаем заказ по токену и возвращаем его id", "status": "passed", "steps": [{"name": "Создаем список существующих ингредиентов", "status": "passed", "parameters": [{"name": "number", "value": "5"}], "start": 1720182727985, "stop": 1720182728134}], "parameters": [{"name": "token", "value": "'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2ODdlN2M1OWVkMjgwMDAxYjQ2MWQ1YSIsImlhdCI6MTcyMDE4MjcyNSwiZXhwIjoxNzIwMTgzOTI1fQ.K6AJvfiR7_BrlLjinEANfyRZDG_pVUVOzYTBKUWIhJA'"}], "start": 1720182727985, "stop": 1720182729421}, {"name": "Генерируем headers с авторизацией", "status": "passed", "parameters": [{"name": "token", "value": "'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2ODdlN2M1OWVkMjgwMDAxYjQ2MWQ1YSIsImlhdCI6MTcyMDE4MjcyNSwiZXhwIjoxNzIwMTgzOTI1fQ.K6AJvfiR7_BrlLjinEANfyRZDG_pVUVOzYTBKUWIhJA'"}], "start": 1720182729422, "stop": 1720182729422}, {"name": "Разлогиниваем пользователя", "status": "passed", "parameters": [{"name": "refresh_token", "value": "'63b893e2e648f93f85633bcb63ea54b79cacfe432c8f7b4872aad7ed0a40d6e0611b0c9b2c340c83'"}], "start": 1720182729422, "stop": 1720182729934}], "start": 1720182727985, "stop": 1720182730349, "uuid": "f16e57e1-7262-47da-9376-d7cacd301384", "historyId": "83799127ddfdc40deb3f6ccdf0da626e", "testCaseId": "83799127ddfdc40deb3f6ccdf0da626e", "fullName": "tests.test_get_orders.TestGetOrders#test_get_order_without_authorization", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_get_orders"}, {"name": "subSuite", "value": "TestGetOrders"}, {"name": "host", "value": "HONOR-X14"}, {"name": "thread", "value": "27232-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_get_orders"}]}